language: minimal

env:

matrix:
  include:
  - os: linux
    dist: trusty
    addons:
      apt:
        packages:
          - cmake
          - ninja-build
          - clang-3.6
          - libc++-dev
          - zlib1g-dev
          - libbz2-dev
          - vim-common
    env: CC=clang-3.6 CXX=clang++-3.6
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-7
        packages:
          - cmake
          - ninja-build
          - clang-7
          - libc++-7-dev
          - libc++abi-7-dev
          - zlib1g-dev
          - libbz2-dev
          - vim-common
    env: CC=clang-7 CXX=clang++-7
  - os: linux
    dist: trusty
    addons:
      apt:
        packages:
          - cmake
          - ninja-build
          - gcc-4.8
          - g++-4.8
          - zlib1g-dev
          - libbz2-dev
          - vim-common
    env: CC=gcc-4.8 CXX=g++-4.8
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - ninja-build
          - gcc-8
          - g++-8
          - zlib1g-dev
          - libbz2-dev
          - vim-common
    env: CC=gcc-8 CXX=g++-8
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - ninja-build
          - gcc-8
          - g++-8
          - zlib1g-dev
          - libbz2-dev
          - vim-common
          - libopenmpi-dev
    env: MPI=1 CC=gcc-8 CXX=g++-8
  - os: osx
    osx_image: xcode10.1
    addons:
      homebrew:
        packages:
          - cmake
          - gcc@8
          - zlib
          - bzip2
    env: CC=gcc-8 CXX=g++-8

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link gcc@8 --force; fi
  - export CC
  - export CXX

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then \
      if [[ -n "$MPI" ]]; then MPI=1; else MPI=0; fi; \
      mkdir build; cd build; \
      cmake -G Ninja -DHAVE_MPI="$MPI" -DHAVE_SSE4_1=1 -DREQUIRE_OPENMP=0 .. \
        || exit 1; ninja || exit 1; \
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then \
      ./lib/mmseqs/util/build_osx.sh . build plass || exit 1; \
    else \
      exit 1; \
    fi

after_success:
  - |
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then \
        mkdir -p plass/bin; \
        cp README.md LICENSE.md plass; \
        cp build/build_sse41/src/plass plass/bin; \
        tar czvf plass-osx-sse41.tar.gz plass; \
        cp build/build_avx2/src/plass plass/bin; \
        tar czvf plass-osx-avx2.tar.gz plass; \
        openssl aes-256-cbc -K $encrypted_70a1e64028ee_key -iv $encrypted_70a1e64028ee_iv -in ./util/.travis.enc -out $HOME/.ssh/id_rsa -d; \
        chmod 400 $HOME/.ssh/id_rsa; \
        ssh -o StrictHostKeyChecking=no codeship@uniclust.mmseqs.com "mkdir -p /home/mirdita/repositories/mmseqs-webserver/archive/${TRAVIS_COMMIT}"; \
        scp -o StrictHostKeyChecking=no plass-osx-sse41.tar.gz plass-osx-avx2.tar.gz codeship@uniclust.mmseqs.com:/home/mirdita/repositories/mmseqs-webserver/archive/${TRAVIS_COMMIT}; \
    fi
